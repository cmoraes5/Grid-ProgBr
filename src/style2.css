/* 
OBS: É possível e em alguns casos 
recomendado utilizar ambos os tipos 
de display, flex e grid, tendo um 
container dentro do outro 
*/

body{
    background-color: #222;
}

.container{
    display: grid;

    height: 95vh;
    width: 95vw;

    position: absolute; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    color: white;
    padding: 10px;
    background-color: #555;
    border-radius: 2rem;

    grid-gap: 10px;

    grid-template:  auto auto auto auto auto auto
                                /
                    auto auto auto auto auto auto;
}

.r1{
    background-color: #ff0055;
    transition: all .3s;
}
.r2{
    background-color: #5900ff;
    transition: all .3s;
}
.r3{
    background-color: #47ff2f;
    transition: all .3s;
}

.r1:hover{box-shadow: 2px 2px 15px #ff0055;}
.r2:hover{box-shadow: 2px 2px 15px #5900ff;}
.r3:hover{box-shadow: 2px 2px 15px #47ff2f;}

.rect{
    display: flex;
    justify-content: center;
    align-items: center;

    border-radius: 2rem;

    font-size: 2rem;

    box-shadow: 2px 2px 10px #111;

    cursor: pointer;
}

.item1{
    grid-column-start: 1;
    grid-column-end: 7;
}
.item2{
    grid-column-start: 1;
    grid-column-end: 3;
}
.item3{
    grid-column-end: span 4;
}
.item4{
    grid-column-end: span 3;
    grid-row-end: span 6;
}
.item5{
    grid-column-start: 4;
    grid-column-end: 7;
}
.item6{
    grid-column-start: 4;
    grid-column-end: 7;
    
    grid-row-start: 5;
    grid-row-end: 7;
}

a{
    text-decoration: none;
    color: #ffffff;
}